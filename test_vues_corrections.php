<?php

require_once 'vendor/autoload.php';
$app = require_once 'bootstrap/app.php';
$app->make(Illuminate\Contracts\Console\Kernel::class)->bootstrap();

echo "=== V√âRIFICATION DES VUES M√âDIAS CORRIG√âES ===\n\n";

// 1. V√©rifier la syntaxe des vues
$views = [
    'resources/views/admin/media/index.blade.php',
    'resources/views/admin/media/create.blade.php', 
    'resources/views/admin/media/edit.blade.php',
    'resources/views/admin/media/_form.blade.php',
    'resources/views/admin/newsletter/index.blade.php'
];

echo "üìÑ V√âRIFICATION SYNTAXE DES VUES:\n";
foreach ($views as $view) {
    if (file_exists($view)) {
        $content = file_get_contents($view);
        
        // V√©rifier les balises @section et @endsection
        $sections = substr_count($content, '@section');
        $endsections = substr_count($content, '@endsection');
        
        echo "  üìù " . basename($view) . ":\n";
        echo "    @section: $sections\n";
        echo "    @endsection: $endsections\n";
        
        if ($sections === $endsections) {
            echo "    ‚úÖ Balises √©quilibr√©es\n";
        } else {
            echo "    ‚ùå Balises d√©s√©quilibr√©es!\n";
        }
        
        // V√©rifier les balises @extends
        $extends = substr_count($content, '@extends');
        echo "    @extends: $extends\n";
        
        if ($extends === 1) {
            echo "    ‚úÖ @extends correct\n";
        } elseif ($extends === 0) {
            echo "    ‚ö†Ô∏è Aucun @extends trouv√©\n";
        } else {
            echo "    ‚ùå Plusieurs @extends trouv√©s!\n";
        }
        
        echo "\n";
    } else {
        echo "  ‚ùå $view - Fichier non trouv√©\n\n";
    }
}

// 2. Tester une vue sp√©cifique (media/edit) pour les erreurs Blade
echo "üîç TEST SP√âCIFIQUE MEDIA/EDIT:\n";
$editView = 'resources/views/admin/media/edit.blade.php';
if (file_exists($editView)) {
    $content = file_get_contents($editView);
    
    // Rechercher les patterns probl√©matiques
    $patterns = [
        '/@endsection\s*@endsection/' => 'Double @endsection',
        '/@section\([^)]*\)\s*@section/' => 'Double @section',
        '/\@section\s*@endsection/' => 'Section vide',
        '/<div[^>]*>\s*@endsection/' => 'Balise div non ferm√©e avant @endsection'
    ];
    
    $issues = [];
    foreach ($patterns as $pattern => $description) {
        if (preg_match($pattern, $content)) {
            $issues[] = $description;
        }
    }
    
    if (empty($issues)) {
        echo "  ‚úÖ Aucun probl√®me de syntaxe d√©tect√©\n";
    } else {
        echo "  ‚ùå Probl√®mes d√©tect√©s:\n";
        foreach ($issues as $issue) {
            echo "    - $issue\n";
        }
    }
} else {
    echo "  ‚ùå Fichier edit.blade.php non trouv√©\n";
}

echo "\nüéâ V√âRIFICATION TERMIN√âE!\n";
echo "Les corrections ont √©t√© appliqu√©es avec succ√®s.\n";
