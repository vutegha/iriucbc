<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;
use App\Models\User;

class SetupModerationRoles extends Command
{
    protected $signature = 'moderation:setup-roles';
    protected $description = 'Configure les r√¥les et permissions pour le syst√®me de mod√©ration';

    public function handle()
    {
        $this->info('üöÄ Configuration des r√¥les et permissions de mod√©ration...');

        // Cr√©er les permissions
        $permissions = [
            'moderate_content',
            'publish_content',
            'unpublish_content',
            'manage_users',
            'manage_roles'
        ];

        foreach ($permissions as $permission) {
            Permission::firstOrCreate(['name' => $permission]);
            $this->info("‚úÖ Permission cr√©√©e: {$permission}");
        }

        // Cr√©er les r√¥les
        $adminRole = Role::firstOrCreate(['name' => 'admin']);
        $moderatorRole = Role::firstOrCreate(['name' => 'moderator']);
        $editorRole = Role::firstOrCreate(['name' => 'editor']);

        // Assigner les permissions aux r√¥les
        $adminRole->syncPermissions($permissions);
        $moderatorRole->syncPermissions(['moderate_content', 'publish_content', 'unpublish_content']);
        $editorRole->syncPermissions(['publish_content']);

        $this->info("‚úÖ R√¥les cr√©√©s et permissions assign√©es");

        // Assigner le r√¥le admin √† l'utilisateur iri@ucbc.org
        $adminUser = User::where('email', 'iri@ucbc.org')->first();
        if ($adminUser) {
            $adminUser->assignRole('admin');
            $this->info("‚úÖ R√¥le admin assign√© √† {$adminUser->email}");
        } else {
            $this->warn("‚ö†Ô∏è Utilisateur iri@ucbc.org non trouv√©");
        }

        $this->info('üéâ Configuration termin√©e !');
        
        // Test de validation
        $this->info("\nüìä Validation:");
        $users = User::all();
        foreach ($users as $user) {
            $canModerate = $user->canModerate() ? 'Oui' : 'Non';
            $roles = $user->getRoleNames()->implode(', ') ?: 'Aucun';
            $this->info("  - {$user->name} ({$user->email}): Mod√©rer={$canModerate}, R√¥les={$roles}");
        }
    }
}
